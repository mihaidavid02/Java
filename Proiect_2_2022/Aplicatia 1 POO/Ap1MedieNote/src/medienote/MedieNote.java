/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package medienote;

import java.awt.event.KeyEvent; 
import javax.swing.JOptionPane;
import javax.swing.DefaultListModel;
/**
 *
 * @author enyae
 */
public class MedieNote extends javax.swing.JFrame {
    int total,numarNote;
    /**
     * Creates new form MedieNote
     */
    public MedieNote() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTITLU = new javax.swing.JLabel();
        jLabelNOTE = new javax.swing.JLabel();
        jLabelMEDIE = new javax.swing.JLabel();
        jLabelCALIFICATIV = new javax.swing.JLabel();
        jRadioButtonCALIFICATIV = new javax.swing.JRadioButton();
        jTextFieldNOTE = new javax.swing.JTextField();
        jTextFieldMEDIE = new javax.swing.JTextField();
        jButtonOK = new javax.swing.JButton();
        jButtonMEDIE = new javax.swing.JButton();
        jButtonRESET = new javax.swing.JButton();
        jButtonEXIT = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListNOTE = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1060, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTITLU.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabelTITLU.setForeground(new java.awt.Color(0, 0, 255));
        jLabelTITLU.setText("CALCUL MEDIE NOTE");
        getContentPane().add(jLabelTITLU, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabelNOTE.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelNOTE.setText("INTRODU NOTE (0-100)");
        getContentPane().add(jLabelNOTE, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 160, 20));

        jLabelMEDIE.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelMEDIE.setText("CALCUL MEDIE");
        getContentPane().add(jLabelMEDIE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        jLabelCALIFICATIV.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelCALIFICATIV.setText("CALIFICATIV");
        getContentPane().add(jLabelCALIFICATIV, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, -1, -1));

        jRadioButtonCALIFICATIV.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jRadioButtonCALIFICATIV.setText("Buton calificativ");
        jRadioButtonCALIFICATIV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCALIFICATIVActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButtonCALIFICATIV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jTextFieldNOTE.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextFieldNOTE.setPreferredSize(new java.awt.Dimension(100, 23));
        jTextFieldNOTE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNOTEKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldNOTE, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 90, -1));

        jTextFieldMEDIE.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextFieldMEDIE.setPreferredSize(new java.awt.Dimension(100, 23));
        getContentPane().add(jTextFieldMEDIE, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 90, -1));

        jButtonOK.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButtonOK.setText("OK");
        jButtonOK.setPreferredSize(new java.awt.Dimension(75, 25));
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 120, -1));

        jButtonMEDIE.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButtonMEDIE.setText("MEDIE");
        jButtonMEDIE.setPreferredSize(new java.awt.Dimension(75, 25));
        jButtonMEDIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMEDIEActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonMEDIE, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 120, -1));

        jButtonRESET.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButtonRESET.setText("RESET");
        jButtonRESET.setPreferredSize(new java.awt.Dimension(75, 25));
        jButtonRESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRESETActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRESET, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, 120, -1));

        jButtonEXIT.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButtonEXIT.setText("EXIT");
        jButtonEXIT.setPreferredSize(new java.awt.Dimension(75, 25));
        jButtonEXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEXITActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEXIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 120, -1));

        jListNOTE.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jScrollPane1.setViewportView(jListNOTE);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, 80, 180));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEXITActionPerformed
        int  c=JOptionPane.showConfirmDialog(null,   "Explicatie:  cu  YES  poti  inchide Fereastra  JFrame,  cu  NO  poti  continua",  "Titlu  casuta  dialog  EXIT", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);  
        if (c==JOptionPane.YES_OPTION) System.exit(0); 
    }//GEN-LAST:event_jButtonEXITActionPerformed

    private void jButtonRESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRESETActionPerformed
        jButtonMEDIE.setEnabled(false); 
        jRadioButtonCALIFICATIV.setEnabled(false); 
        jButtonRESET.setEnabled(false); 
        jLabelCALIFICATIV.setText(null); 
        jTextFieldMEDIE.setText(null); 
        jLabelMEDIE.setText(null); 
        jTextFieldNOTE.setEnabled(true); 
        jTextFieldMEDIE.setVisible(false); 
        jButtonOK.setEnabled(true);   
        
        number.clear();
        jListNOTE.setModel(number);
        //altfel retine numarNote si total de la toate calculele mediilor aritmetice dinainte de reset din sesiunea curenta
        numarNote=0;
        total=0;
    }//GEN-LAST:event_jButtonRESETActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        total=0; 
        numarNote=0; 
        jButtonMEDIE.setEnabled(false); 
        jRadioButtonCALIFICATIV.setEnabled(false); 
        jButtonRESET.setEnabled(false); 
        jLabelCALIFICATIV.setVisible(false); 
        jTextFieldMEDIE.setVisible(false); 
        jLabelMEDIE.setVisible(false);  
    }//GEN-LAST:event_formWindowActivated

    DefaultListModel number=new DefaultListModel();
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        int num1=Integer.parseInt(jTextFieldNOTE.getText()); 
        //testeaza daca numarul introdus este intre 0 si 100 
        if (num1>100){JOptionPane.showMessageDialog(this,num1+" nu e punctaj valid!!!");} 
        else 
            {number.addElement(num1); 
        jListNOTE.setModel(number); 
        total=total+num1; 
        numarNote=numarNote+1;} 
 
        jButtonMEDIE.setEnabled(true); 
        jTextFieldNOTE.setText(null); 
        //dupa apasare Ok, cursorul trece automat in TextfieldNOTE 
        jTextFieldNOTE.requestFocus(); 
        jLabelNOTE.setVisible(true); 
        jTextFieldMEDIE.setVisible(false); 
 
        //contor numar itemi in lista 
        int contor=jListNOTE.getModel().getSize(); 
        if (contor==10){//lista nu poate prelua mai mult de 10 note 
        jTextFieldNOTE.setEnabled(false); 
        jButtonOK.setEnabled(false); 
        jRadioButtonCALIFICATIV.setEnabled(true); 
        }
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonMEDIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMEDIEActionPerformed
        double medie; 
        String raspuns; 
        medie=total/numarNote; 
        raspuns=String.format("%.2f",medie); 
        jTextFieldMEDIE.setVisible(true); 
        jLabelMEDIE.setVisible(true); 
 
        jTextFieldMEDIE.setText(raspuns); 
        //TextFieldul de medie e doar pentru afisare, utilizatorul nu are voie sa tasteze in el 
        jTextFieldMEDIE.setEditable(false); 
        jTextFieldNOTE.setEnabled(false); 
        jButtonOK.setEnabled(false); 
        //dupa ce am calculat media pana apas reset, butonul medie devine inactiv 
        jButtonMEDIE.setEnabled(false); 
        jRadioButtonCALIFICATIV.setEnabled(true); 
        jButtonRESET.setEnabled(true); 
      
        //Corespondenta medie-calificativ 
        if (medie>=95) jLabelCALIFICATIV.setText("EXCELENT"); 
        else if (medie<95 && medie>=85) jLabelCALIFICATIV.setText("FOARTE BINE"); 
        else if (medie<85 && medie>=75) jLabelCALIFICATIV.setText("BINE"); 
        else if (medie<75 && medie>=60) jLabelCALIFICATIV.setText("SATISFACATOR"); 
        else if (medie<60 && medie>=45) jLabelCALIFICATIV.setText("SUFICIENT"); 
        else jLabelCALIFICATIV.setText("INSUFICIENT"); 
    }//GEN-LAST:event_jButtonMEDIEActionPerformed

    private void jRadioButtonCALIFICATIVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCALIFICATIVActionPerformed
        jLabelCALIFICATIV.setVisible(true);
    }//GEN-LAST:event_jRadioButtonCALIFICATIVActionPerformed

    private void jTextFieldNOTEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNOTEKeyTyped
        char c=evt.getKeyChar(); 
        if (!(Character.isDigit(c))||(c==KeyEvent.VK_BACK_SPACE) ||(c==KeyEvent.VK_DELETE)){ 
            getToolkit().beep(); 
        evt.consume(); 
        } 
    }//GEN-LAST:event_jTextFieldNOTEKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedieNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedieNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedieNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedieNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedieNote().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEXIT;
    private javax.swing.JButton jButtonMEDIE;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonRESET;
    private javax.swing.JLabel jLabelCALIFICATIV;
    private javax.swing.JLabel jLabelMEDIE;
    private javax.swing.JLabel jLabelNOTE;
    private javax.swing.JLabel jLabelTITLU;
    private javax.swing.JList<String> jListNOTE;
    private javax.swing.JRadioButton jRadioButtonCALIFICATIV;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldMEDIE;
    private javax.swing.JTextField jTextFieldNOTE;
    // End of variables declaration//GEN-END:variables
}